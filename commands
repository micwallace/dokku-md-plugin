#!/bin/bash
set -e;

# Check if name is specified
if [[ $1 == mysqldb:* ]]; then
    if [[ -z $2 ]]; then
        echo
        echo "You must specify an app name"
        exit 1
    else
        APP="$2"
        # Check if app exists with the same name
        if [[ -d "$DOKKU_ROOT/$APP" ]]; then
            echo "App exists"
            APP_EXISTS=true
        else
            APP_EXISTS=false
        fi
    fi
fi

# Load master config
source $DOKKU_ROOT/.mysql-configs/master

case "$1" in

  mysqldb:create)
    # Check if an existing DB volume exists
    if [[ -f "$DOKKU_ROOT/.mysql-configs/pwd_$APP" ]]; then
        #VOLUME="`cat $DOKKU_ROOT/.mariadb/volume_$APP`:/opt/mysql"
        echo
        echo "-----> Database config detected for $APP, skipping DB install"
    else
        #VOLUME="/opt/mysql"
        # Generate a random password for DB user
        DB_PASSWORD=$(< /dev/urandom tr -dc A-Za-z0-9 | head -c 16)
        echo $DB_PASSWORD > "$DOKKU_ROOT/.mysql-configs/pwd_$APP"
        chown dokku: "$DOKKU_ROOT/.mysql-configs/pwd_$APP"
        chmod 700 "$DOKKU_ROOT/.mysql-configs/pwd_$APP"
        echo
            echo "-----> Created config file for new database"
        # connect to mySql server and create database if it does not exist.
        DBEXISTS=$(mysql --batch --skip-column-names --host=$HOST --user="$PRIVUSER" --port="$PORT" --password="$PRIVPASS" -e "SHOW DATABASES LIKE '"$APP"';" | grep "$APP" > /dev/null; echo "$?")
        if [ $DBEXISTS -eq 0 ];then
            #purge old user and update
            echo
            echo "-----> $APP database already exists, updating user for database."
            mysql --host=$HOST --user="$PRIVUSER" --port="$PORT" --password="$PRIVPASS" -e "DROP USER $APP; GRANT ALL PRIVILEGES ON $APP.* to $APP@'%' IDENTIFIED BY '$DB_PASSWORD';";
        else
            # add db & set db user/permissions
            echo
            echo "-----> Creating MySQL Database for: $APP"
            mysql --host=$HOST --user="$PRIVUSER" --port="$PORT" --password="$PRIVPASS" -e "CREATE DATABASE $APP; GRANT ALL PRIVILEGES ON $APP.* to $APP@'%' IDENTIFIED BY '$DB_PASSWORD';";
        fi
        # Link to a potential existing app
        dokku mariadb:link $APP $APP
    fi
    sleep 1
    dokku mysqldb:info $APP
    ;;

  mysqldb:delete)
    # Remove container db password
    if [[ -f "$DOKKU_ROOT/.mysql-configs/pwd_$APP" ]]; then
        rm -f "$DOKKU_ROOT/.mysql-configs/pwd_$APP"
    fi
    
    # TODO: Connect to mysql, backup database & delete
    echo
    echo "-----> MySQL database config deleted for: $APP"
    ;;
    
  mariadb:link)
    if $APP_EXISTS; then
        # Check argument
        if [[ -z $3 ]]; then
            echo "Linking db to $APP"
            DB_PASSWORD=$(cat "$DOKKU_ROOT/.mysql-configs/pwd_$APP")
            # Link database using dokku command
            dokku config:set $APP "DATABASE_URL=mysql2://$APP:$DB_PASSWORD@$HOST:$PORT/$APP"
            #All DB-variables as ENV
            dokku config:set $APP "DB_HOST=$HOST DB_PASS=$DB_PASSWORD DB_NAME=$APP DB_PORT=$PORT DB_USER=$APP"
            exit 1
        fi
        if [[ ! -f "$DOKKU_ROOT/.mysql-configs/pwd_$3" ]]; then
            echo "Database is not configured correctly, use mysqldb:create $3 first."
            exit 1
        fi
        DB_PASSWORD=$(cat "$DOKKU_ROOT/.mysql-configs/pwd_$3")
        # Link database using dokku command
        dokku config:set $APP "DATABASE_URL=mysql2://$3:$DB_PASSWORD@$HOST:$PORT/$3"
        #All DB-variables as ENV
        dokku config:set $APP "DB_HOST=$HOST DB_PASSWORD=$DB_PASSWORD DB_NAME=$3 DB_PORT=$PORT DB_USER=$3"
        echo
        echo "-----> $APP linked to $3 database"
    fi
    ;;

  mysqldb:info)
    echo
    echo "       Host: $HOST"
    echo "       Port: $PORT"
    echo "       User: '$APP'"
    echo "       Password: '$(cat "$DOKKU_ROOT/.mysql-configs/pwd_$APP")'"
    echo "       Database: '$APP'"
    echo
    ;;

  mysqldb:console)
    if $APP_EXISTS; then
        # Check argument
        if [[ -z $2 ]]; then
            echo "You must specify a database name"
            exit 1
        fi

        DB_PASSWORD=$(cat "$DOKKU_ROOT/.mysql-configs/pwd_$2")
        # Open database using mysql-client
        mysql --host="$HOST" --user="$2" --port="$PORT" --password="$DB_PASSWORD" $2
    fi
    ;;

  mysqldb:dump)
    if $APP_EXISTS; then
        # Check argument
        if [[ -z $2 ]]; then
            echo "You must specify a database name"
            exit 1
        fi

        DB_PASSWORD=$(cat "$DOKKU_ROOT/.mysql-configs/pwd_$2")
        # Check if user gave a filename
        if [[ -z $3 ]]; then
            echo "Dumping to $2-dump$(date +%s).sql"
            mysqldump --host="$HOST" --user="$2" --port="$PORT" --password="$DB_PASSWORD" $2 > "$2-dump$(date +%s).sql"
            exit 1
        fi
        mysqldump --host="$HOST" --user="$2" --port="$PORT" --password="$DB_PASSWORD" $2 > $3
    fi
    ;;

  help)
    cat && cat<<EOF
    mariadb:create <app>      Create a MySQL database
    mariadb:delete <app>      Delete specified MySQL database
    mariadb:info <app> <db>   Link app to a specific database
    mariadb:info <app>        Display database information
    mariadb:console <app>     Open mysql-console to a MySQL database
    mariadb:dump <app> <file> Dump default db database into file
EOF
    ;;

esac
