#!/bin/bash
set -eo pipefail; [[ $DOKKU_TRACE ]] && set -x

# Check if name is specified
if [[ $1 == mysqldb:* ]] && [[ $1 != mysqldb:help ]]; then
    if [[ -z $2 ]]; then
        echo ""
        echo "You must specify an app name"
        exit 1
    else
        APP="$2"
        # Check if app exists with the same name
        if [[ -d "$DOKKU_ROOT/$APP" ]]; then
            APP_EXISTS=true
        else
            APP_EXISTS=false
        fi
    fi
fi

# Load master config
source $DOKKU_ROOT/.mysql-configs/master

case "$1" in

  mysqldb:create)
    # Check if an existing DB volume exists
    if [[ -f "$DOKKU_ROOT/.mysql-configs/pwd_$APP" ]]; then
        #VOLUME="`cat $DOKKU_ROOT/.mariadb/volume_$APP`:/opt/mysql"
        echo ""
        echo "-----> Database config detected for $APP, skipping DB install"
    else
        #VOLUME="/opt/mysql"
        # Check if database name is supplied, otherwise use app name
        if [ -z $3 ];then
            DB_NAME=$APP
        else
            DB_NAME=$3
        fi
        # Generate a random password for DB user
        DB_PASSWORD=$(openssl rand -base64 24 | sed 's/\//_/g')
        echo $DB_PASSWORD > "$DOKKU_ROOT/.mysql-configs/pwd_$DB_NAME"
        chown dokku "$DOKKU_ROOT/.mysql-configs/pwd_$DB_NAME"
        chmod 700 "$DOKKU_ROOT/.mysql-configs/pwd_$DB_NAME"
        echo ""
        echo "-----> Created config file for new database"
        # connect to mySql server and create database if it does not exist.
        DBEXISTS=$(mysql --batch --skip-column-names --host=$HOST --user="$PRIVUSER" --port="$PORT" --password="$PRIVPASS" -e "SHOW DATABASES LIKE '"$DB_NAME"';" | grep "$DB_NAME" > /dev/null; echo "$?")
        if [ $DBEXISTS -eq 0 ];then
            #purge old user and update
            echo ""
            echo "-----> $APP database already exists, updating user for database."
            mysql --host=$HOST --user="$PRIVUSER" --port="$PORT" --password="$PRIVPASS" -e "DROP USER $APP; GRANT ALL PRIVILEGES ON $DB_NAME.* to $APP@'%' IDENTIFIED BY '$DB_PASSWORD';";
        else
            # add db & set db user/permissions
            echo ""
            echo "-----> Creating MySQL Database for: $APP"
            mysql --host=$HOST --user="$PRIVUSER" --port="$PORT" --password="$PRIVPASS" -e "CREATE DATABASE $DB_NAME; GRANT ALL PRIVILEGES ON $DB_NAME.* to $APP@'%' IDENTIFIED BY '$DB_PASSWORD';";
        fi
        # Link to a potential existing app
        dokku mysqldb:link $APP $DB_NAME
    fi
    sleep 1
    dokku mysqldb:info $APP
    ;;

  mysqldb:delete)
    DB_NAME=$(dokku config:get $2 DB_NAME)
    # Remove container db password
    if [[ -f "$DOKKU_ROOT/.mysql-configs/pwd_$DB_NAME" ]]; then
        rm -f "$DOKKU_ROOT/.mysql-configs/pwd_$DB_NAME"
    fi
    
    # TODO: Connect to mysql, backup database & delete
    echo ""
    echo "-----> MySQL database config deleted for: $APP"
    ;;
    
  mysqldb:link)
    if $APP_EXISTS; then
        # Check argument
        if [[ -z $3 ]]; then
            echo "Linking db to $APP"
            DB_PASSWORD=$(cat "$DOKKU_ROOT/.mysql-configs/pwd_$APP")
            # Link database using dokku command
            dokku config:set $APP DATABASE_URL="mysql2://"$APP":"$DB_PASSWORD"@"$HOST":"$PORT"/"$APP DB_HOST=$HOST DB_PASS=$DB_PASSWORD DB_NAME=$APP DB_PORT=$PORT DB_USER=$APP
            exit 1
        fi
        if [[ ! -f "$DOKKU_ROOT/.mysql-configs/pwd_$3" ]]; then
            echo "The Database is not configured, use mysqldb:create $3 first."
            exit 1
        fi
        DB_PASSWORD=$(cat "$DOKKU_ROOT/.mysql-configs/pwd_$3")
        # Link database using dokku command
        dokku config:set $APP DATABASE_URL="mysql2://"$APP":"$DB_PASSWORD"@"$HOST":"$PORT"/"$3 DB_HOST=$HOST DB_PASSWORD=$DB_PASSWORD DB_NAME=$3 DB_PORT=$PORT DB_USER=$3
        echo ""
        echo "-----> $APP linked to $3 database"
    fi
    ;;

  mysqldb:info)
    DB_NAME=$(dokku config:get $2 DB_NAME)
    echo ""
    echo "       Host: $HOST"
    echo "       Port: $PORT"
    echo "       User: '$APP'"
    echo "       Password: '$(cat "$DOKKU_ROOT/.mysql-configs/pwd_$DB_NAME")'"
    echo "       Database: '$DB_NAME'"
    echo
    ;;

  mysqldb:console)
    # Check argument
    if [[ -z $2 ]]; then
        echo "You must specify an app name"
        exit 1
    fi
        
    DB_NAME=$(dokku config:get $2 DB_NAME)
    if [[ ! -f "$DOKKU_ROOT/.mysql-configs/pwd_$DB_NAME" ]]; then
        echo "The Database is not configured, use mysqldb:create $2 first."
        exit 1
    fi
    DB_PASSWORD=$(cat "$DOKKU_ROOT/.mysql-configs/pwd_$DB_NAME")
    
    # Open database using mysql-client
    mysql --host="$HOST" --user="$2" --port="$PORT" --password="$DB_PASSWORD" $DB_NAME
    
    ;;

  mysqldb:dump)
    # Check argument
    if [[ -z $2 ]]; then
        echo "You must specify an app name"
        exit 1
    fi
    
    DB_NAME=$(dokku config:get $2 DB_NAME)
    if [[ ! -f "$DOKKU_ROOT/.mysql-configs/pwd_$DB_NAME" ]]; then
        echo "The Database is not configured, use mysqldb:create $2 first."
        exit 1
    fi
    DB_PASSWORD=$(cat "$DOKKU_ROOT/.mysql-configs/pwd_$DB_NAME")
    
    # Check if user gave a filename
    if [[ -z $3 ]]; then
        echo "Dumping to $2-dump$(date +%s).sql"
        mysqldump --host="$HOST" --user="$PRIVUSER" --port="$PORT" --password="$PRIVPASS" $DB_NAME > "$DOKKU_ROOT/mysql-backups/$DB_NAME-dump$(date +%s).sql"
    else
        echo "Dumping to $3"
        mysqldump --host="$HOST" --user="$PRIVUSER" --port="$PORT" --password="$PRIVPASS" $DB_NAME > "$DOKKU_ROOT/mysql-backups/$3"
    fi
    ;;

  help | mysqldb:help)
    cat<<EOF
    mysqldb:create <app> <name>     Create a MySQL database (name is app if not provided)
    mysqldb:delete <app>      Delete specified MySQL database
    mysqldb:link <app> <db>   Link app to a specific database
    mysqldb:info <app>        Display database information
    mysqldb:console <app>     Open mysql-console to MySQL database
    mysqldb:dump <app> <file> Dump app database into file
EOF
    ;;
    
    *)
    exit $DOKKU_NOT_IMPLEMENTED_EXIT
    ;;

esac
