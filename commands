#!/bin/bash
set -e;

# Check if name is specified
if [[ $1 == mysqldb:* ]]; then
    if [[ -z $2 ]]; then
        echo
        echo "You must specify an app name"
        exit 1
    else
        APP="$2"
        # Check if app exists with the same name
        if [[ -d "$DOKKU_ROOT/$APP" ]]; then
            APP_EXISTS=true
        else
            APP_EXISTS=false
        fi
    fi
fi

# Create .mariadb directory if does not exist
if [[ ! -d $DOKKU_ROOT/.mysql-configs ]]; then
    mkdir -p $DOKKU_ROOT/.mysql-configs
    chown -R dokku: $DOKKU_ROOT/.mysql-configs
fi

case "$1" in

  mysqldb:create)
    # Check if an existing DB volume exists
    if [[ -f "$DOKKU_ROOT/.mysql-configs/pwd_$APP" ]]; then
        #VOLUME="`cat $DOKKU_ROOT/.mariadb/volume_$APP`:/opt/mysql"
        echo
        echo "-----> Existing database detected for $APP, skipping DB install"
    else
        #VOLUME="/opt/mysql"
        # Generate a random password for DB user
        DB_PASSWORD=$(< /dev/urandom tr -dc A-Za-z0-9 | head -c 16)
        echo $DB_PASSWORD > "$DOKKU_ROOT/.mysql-configs/pwd_$APP"
        chown dokku: "$DOKKU_ROOT/.mysql-configs/pwd_$APP"
        chmod 700 "$DOKKU_ROOT/.mysql-configs/pwd_$APP"
        # connect to mySql server and create database if it does not exist.
        mysql --host=172.17.42.1 [database_username] -p [database_password] -D [database_name] -e "SELECT * FROM [table_name]";
        echo
        echo "-----> MySQL Database  created for: $APP"
        # add user & set db permissions
        
        # I don't think we need this, we will set master static port. Write port for further usage
        PORT=$(docker port $ID 3306 | sed 's/0.0.0.0://')
        echo $PORT > "$DOKKU_ROOT/.mysql-configs/port_$APP"
        # Link to a potential existing app
        #dokku mariadb:link $APP $APP
        
    fi
    sleep 1
    dokku mysqldb:info $APP
    ;;

  mysqldb:delete)
    # Remove container port storage
    if [[ -f "$DOKKU_ROOT/.mysql-configs/port_$APP" ]]; then
        rm -f "$DOKKU_ROOT/.mysql-configs/port_$APP"
    fi
    # Remove container db password
    if [[ -f "$DOKKU_ROOT/.mysql-configs/pwd_$APP" ]]; then
        rm -f "$DOKKU_ROOT/.mysql-configs/pwd_$APP"
    fi
    
    # Connect to mysql, backup database & delete
    echo
    echo "-----> MySQL database deleted for: $APP"
    ;;

  mysqldb:info)
    echo
    echo "       Host: 172.17.42.1"
    echo "       Port: $(cat "$DOKKU_ROOT/.mariadb/port_$APP")"
    echo "       User: 'root'"
    echo "       Password: '$(cat "$DOKKU_ROOT/.mariadb/pwd_$APP")'"
    echo "       Database: 'db'"
    echo
    ;;

  mysqldb:console)
    if $APP_EXISTS; then
        # Check argument
        if [[ -z $2 ]]; then
            echo "You must specify a database name"
            exit 1
        fi

        DB_PASSWORD=$(cat "$DOKKU_ROOT/.mariadb/pwd_$2")
        PORT=$(cat "$DOKKU_ROOT/.mariadb/port_$2")
        # Open database using mysql-client
        mysql --host=172.17.42.1 --user=root --port="$PORT" --password="$DB_PASSWORD" db
    fi
    ;;

  mysqldb:dump)
    if $APP_EXISTS; then
        # Check argument
        if [[ -z $2 ]]; then
            echo "You must specify a database name"
            exit 1
        fi

        DB_PASSWORD=$(cat "$DOKKU_ROOT/.mysql-configs/pwd_$2")
        PORT=$(cat "$DOKKU_ROOT/.mysql-configs/port_$2")
        # Check if user gave a filename
        if [[ -z $3 ]]; then
            echo "Dumping to $2-dump$(date +%s).sql"
            mysqldump --host=172.17.42.1 --user=root --port="$PORT" --password="$DB_PASSWORD" db > "$2-dump$(date +%s).sql"
            exit 1
        fi
        mysqldump --host=172.17.42.1 --user=root --port="$PORT" --password="$DB_PASSWORD" db > $3
    fi
    ;;

  help)
    cat && cat<<EOF
    mariadb:create <app>      Create a MariaDB container
    mariadb:delete <app>      Delete specified MariaDB container
    mariadb:info <app>        Display database information
    mariadb:console <app>     Open mysql-console to MariaDB container
    mariadb:dump <app> <file> Dump default db database into file
EOF
    ;;

esac
